version: '3.7'

services:
  jaeger:
    image: jaegertracing/all-in-one:1.52
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "6831:6831/udp"     # Agent - aceita dados no formato Jaeger Thrift via UDP
      - "6832:6832/udp"     # Agent - aceita dados no formato Jaeger Thrift via UDP (compact)
      - "5778:5778"         # Agent - serve configurações via HTTP
      - "16686:16686"       # UI - interface web do Jaeger
      - "4317:4317"         # OTLP gRPC
      - "4318:4318"         # OTLP HTTP
      - "14250:14250"       # Collector - aceita modelo de dados Jaeger diretamente
      - "14268:14268"       # Collector - aceita formatos Jaeger diretamente
      - "14269:14269"       # Admin port: health check
      - "9411:9411"         # Collector - aceita spans no formato Zipkin
    networks:
      - jaeger-network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5433:5432"

  zookeeper:
    image: zookeeper:3.6.1
    container_name: zookeeper
    restart: always
    networks:
      - kafka-net
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    container_name: kafka
    restart: always
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  redis:
    image: "redis:6"
    ports:
      - 6379:6379

networks:
  kafka-net:
  jaeger-network:
    driver: bridge